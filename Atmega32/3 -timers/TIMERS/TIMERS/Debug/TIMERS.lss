
TIMERS.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000047a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  0000047a  0000050e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800062  00800062  00000510  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000510  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000540  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  0000057c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000cb1  00000000  00000000  0000063c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000757  00000000  00000000  000012ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005e3  00000000  00000000  00001a44  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000184  00000000  00000000  00002028  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000627  00000000  00000000  000021ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000459  00000000  00000000  000027d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00002c2c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 4d 01 	jmp	0x29a	; 0x29a <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e7       	ldi	r30, 0x7A	; 122
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a2 e6       	ldi	r26, 0x62	; 98
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 36       	cpi	r26, 0x6A	; 106
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 33 01 	call	0x266	; 0x266 <main>
  8a:	0c 94 3b 02 	jmp	0x476	; 0x476 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <DIO_SetPinDirection>:
  92:	81 30       	cpi	r24, 0x01	; 1
  94:	11 f1       	breq	.+68     	; 0xda <DIO_SetPinDirection+0x48>
  96:	30 f0       	brcs	.+12     	; 0xa4 <DIO_SetPinDirection+0x12>
  98:	82 30       	cpi	r24, 0x02	; 2
  9a:	d1 f1       	breq	.+116    	; 0x110 <DIO_SetPinDirection+0x7e>
  9c:	83 30       	cpi	r24, 0x03	; 3
  9e:	09 f4       	brne	.+2      	; 0xa2 <DIO_SetPinDirection+0x10>
  a0:	52 c0       	rjmp	.+164    	; 0x146 <DIO_SetPinDirection+0xb4>
  a2:	08 95       	ret
  a4:	41 30       	cpi	r20, 0x01	; 1
  a6:	59 f4       	brne	.+22     	; 0xbe <DIO_SetPinDirection+0x2c>
  a8:	81 e0       	ldi	r24, 0x01	; 1
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	02 c0       	rjmp	.+4      	; 0xb2 <DIO_SetPinDirection+0x20>
  ae:	88 0f       	add	r24, r24
  b0:	99 1f       	adc	r25, r25
  b2:	6a 95       	dec	r22
  b4:	e2 f7       	brpl	.-8      	; 0xae <DIO_SetPinDirection+0x1c>
  b6:	9a b3       	in	r25, 0x1a	; 26
  b8:	89 2b       	or	r24, r25
  ba:	8a bb       	out	0x1a, r24	; 26
  bc:	08 95       	ret
  be:	41 11       	cpse	r20, r1
  c0:	5c c0       	rjmp	.+184    	; 0x17a <DIO_SetPinDirection+0xe8>
  c2:	81 e0       	ldi	r24, 0x01	; 1
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	02 c0       	rjmp	.+4      	; 0xcc <DIO_SetPinDirection+0x3a>
  c8:	88 0f       	add	r24, r24
  ca:	99 1f       	adc	r25, r25
  cc:	6a 95       	dec	r22
  ce:	e2 f7       	brpl	.-8      	; 0xc8 <DIO_SetPinDirection+0x36>
  d0:	80 95       	com	r24
  d2:	9a b3       	in	r25, 0x1a	; 26
  d4:	89 23       	and	r24, r25
  d6:	8a bb       	out	0x1a, r24	; 26
  d8:	08 95       	ret
  da:	41 30       	cpi	r20, 0x01	; 1
  dc:	59 f4       	brne	.+22     	; 0xf4 <DIO_SetPinDirection+0x62>
  de:	81 e0       	ldi	r24, 0x01	; 1
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	02 c0       	rjmp	.+4      	; 0xe8 <DIO_SetPinDirection+0x56>
  e4:	88 0f       	add	r24, r24
  e6:	99 1f       	adc	r25, r25
  e8:	6a 95       	dec	r22
  ea:	e2 f7       	brpl	.-8      	; 0xe4 <DIO_SetPinDirection+0x52>
  ec:	97 b3       	in	r25, 0x17	; 23
  ee:	89 2b       	or	r24, r25
  f0:	87 bb       	out	0x17, r24	; 23
  f2:	08 95       	ret
  f4:	41 11       	cpse	r20, r1
  f6:	41 c0       	rjmp	.+130    	; 0x17a <DIO_SetPinDirection+0xe8>
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	90 e0       	ldi	r25, 0x00	; 0
  fc:	02 c0       	rjmp	.+4      	; 0x102 <DIO_SetPinDirection+0x70>
  fe:	88 0f       	add	r24, r24
 100:	99 1f       	adc	r25, r25
 102:	6a 95       	dec	r22
 104:	e2 f7       	brpl	.-8      	; 0xfe <DIO_SetPinDirection+0x6c>
 106:	80 95       	com	r24
 108:	97 b3       	in	r25, 0x17	; 23
 10a:	89 23       	and	r24, r25
 10c:	87 bb       	out	0x17, r24	; 23
 10e:	08 95       	ret
 110:	41 30       	cpi	r20, 0x01	; 1
 112:	59 f4       	brne	.+22     	; 0x12a <DIO_SetPinDirection+0x98>
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	02 c0       	rjmp	.+4      	; 0x11e <DIO_SetPinDirection+0x8c>
 11a:	88 0f       	add	r24, r24
 11c:	99 1f       	adc	r25, r25
 11e:	6a 95       	dec	r22
 120:	e2 f7       	brpl	.-8      	; 0x11a <DIO_SetPinDirection+0x88>
 122:	94 b3       	in	r25, 0x14	; 20
 124:	89 2b       	or	r24, r25
 126:	84 bb       	out	0x14, r24	; 20
 128:	08 95       	ret
 12a:	41 11       	cpse	r20, r1
 12c:	26 c0       	rjmp	.+76     	; 0x17a <DIO_SetPinDirection+0xe8>
 12e:	81 e0       	ldi	r24, 0x01	; 1
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	02 c0       	rjmp	.+4      	; 0x138 <DIO_SetPinDirection+0xa6>
 134:	88 0f       	add	r24, r24
 136:	99 1f       	adc	r25, r25
 138:	6a 95       	dec	r22
 13a:	e2 f7       	brpl	.-8      	; 0x134 <DIO_SetPinDirection+0xa2>
 13c:	80 95       	com	r24
 13e:	94 b3       	in	r25, 0x14	; 20
 140:	89 23       	and	r24, r25
 142:	84 bb       	out	0x14, r24	; 20
 144:	08 95       	ret
 146:	41 30       	cpi	r20, 0x01	; 1
 148:	59 f4       	brne	.+22     	; 0x160 <DIO_SetPinDirection+0xce>
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	02 c0       	rjmp	.+4      	; 0x154 <DIO_SetPinDirection+0xc2>
 150:	88 0f       	add	r24, r24
 152:	99 1f       	adc	r25, r25
 154:	6a 95       	dec	r22
 156:	e2 f7       	brpl	.-8      	; 0x150 <DIO_SetPinDirection+0xbe>
 158:	91 b3       	in	r25, 0x11	; 17
 15a:	89 2b       	or	r24, r25
 15c:	81 bb       	out	0x11, r24	; 17
 15e:	08 95       	ret
 160:	41 11       	cpse	r20, r1
 162:	0b c0       	rjmp	.+22     	; 0x17a <DIO_SetPinDirection+0xe8>
 164:	81 e0       	ldi	r24, 0x01	; 1
 166:	90 e0       	ldi	r25, 0x00	; 0
 168:	02 c0       	rjmp	.+4      	; 0x16e <DIO_SetPinDirection+0xdc>
 16a:	88 0f       	add	r24, r24
 16c:	99 1f       	adc	r25, r25
 16e:	6a 95       	dec	r22
 170:	e2 f7       	brpl	.-8      	; 0x16a <DIO_SetPinDirection+0xd8>
 172:	80 95       	com	r24
 174:	91 b3       	in	r25, 0x11	; 17
 176:	89 23       	and	r24, r25
 178:	81 bb       	out	0x11, r24	; 17
 17a:	08 95       	ret

0000017c <DIO_WritePinValue>:
 17c:	81 30       	cpi	r24, 0x01	; 1
 17e:	11 f1       	breq	.+68     	; 0x1c4 <DIO_WritePinValue+0x48>
 180:	30 f0       	brcs	.+12     	; 0x18e <DIO_WritePinValue+0x12>
 182:	82 30       	cpi	r24, 0x02	; 2
 184:	d1 f1       	breq	.+116    	; 0x1fa <DIO_WritePinValue+0x7e>
 186:	83 30       	cpi	r24, 0x03	; 3
 188:	09 f4       	brne	.+2      	; 0x18c <DIO_WritePinValue+0x10>
 18a:	52 c0       	rjmp	.+164    	; 0x230 <DIO_WritePinValue+0xb4>
 18c:	08 95       	ret
 18e:	41 30       	cpi	r20, 0x01	; 1
 190:	59 f4       	brne	.+22     	; 0x1a8 <DIO_WritePinValue+0x2c>
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	02 c0       	rjmp	.+4      	; 0x19c <DIO_WritePinValue+0x20>
 198:	88 0f       	add	r24, r24
 19a:	99 1f       	adc	r25, r25
 19c:	6a 95       	dec	r22
 19e:	e2 f7       	brpl	.-8      	; 0x198 <DIO_WritePinValue+0x1c>
 1a0:	9b b3       	in	r25, 0x1b	; 27
 1a2:	89 2b       	or	r24, r25
 1a4:	8b bb       	out	0x1b, r24	; 27
 1a6:	08 95       	ret
 1a8:	41 11       	cpse	r20, r1
 1aa:	5c c0       	rjmp	.+184    	; 0x264 <DIO_WritePinValue+0xe8>
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <DIO_WritePinValue+0x3a>
 1b2:	88 0f       	add	r24, r24
 1b4:	99 1f       	adc	r25, r25
 1b6:	6a 95       	dec	r22
 1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <DIO_WritePinValue+0x36>
 1ba:	80 95       	com	r24
 1bc:	9b b3       	in	r25, 0x1b	; 27
 1be:	89 23       	and	r24, r25
 1c0:	8b bb       	out	0x1b, r24	; 27
 1c2:	08 95       	ret
 1c4:	41 30       	cpi	r20, 0x01	; 1
 1c6:	59 f4       	brne	.+22     	; 0x1de <DIO_WritePinValue+0x62>
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <DIO_WritePinValue+0x56>
 1ce:	88 0f       	add	r24, r24
 1d0:	99 1f       	adc	r25, r25
 1d2:	6a 95       	dec	r22
 1d4:	e2 f7       	brpl	.-8      	; 0x1ce <DIO_WritePinValue+0x52>
 1d6:	98 b3       	in	r25, 0x18	; 24
 1d8:	89 2b       	or	r24, r25
 1da:	88 bb       	out	0x18, r24	; 24
 1dc:	08 95       	ret
 1de:	41 11       	cpse	r20, r1
 1e0:	41 c0       	rjmp	.+130    	; 0x264 <DIO_WritePinValue+0xe8>
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	02 c0       	rjmp	.+4      	; 0x1ec <DIO_WritePinValue+0x70>
 1e8:	88 0f       	add	r24, r24
 1ea:	99 1f       	adc	r25, r25
 1ec:	6a 95       	dec	r22
 1ee:	e2 f7       	brpl	.-8      	; 0x1e8 <DIO_WritePinValue+0x6c>
 1f0:	80 95       	com	r24
 1f2:	98 b3       	in	r25, 0x18	; 24
 1f4:	89 23       	and	r24, r25
 1f6:	88 bb       	out	0x18, r24	; 24
 1f8:	08 95       	ret
 1fa:	41 30       	cpi	r20, 0x01	; 1
 1fc:	59 f4       	brne	.+22     	; 0x214 <DIO_WritePinValue+0x98>
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	90 e0       	ldi	r25, 0x00	; 0
 202:	02 c0       	rjmp	.+4      	; 0x208 <DIO_WritePinValue+0x8c>
 204:	88 0f       	add	r24, r24
 206:	99 1f       	adc	r25, r25
 208:	6a 95       	dec	r22
 20a:	e2 f7       	brpl	.-8      	; 0x204 <DIO_WritePinValue+0x88>
 20c:	95 b3       	in	r25, 0x15	; 21
 20e:	89 2b       	or	r24, r25
 210:	85 bb       	out	0x15, r24	; 21
 212:	08 95       	ret
 214:	41 11       	cpse	r20, r1
 216:	26 c0       	rjmp	.+76     	; 0x264 <DIO_WritePinValue+0xe8>
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	02 c0       	rjmp	.+4      	; 0x222 <DIO_WritePinValue+0xa6>
 21e:	88 0f       	add	r24, r24
 220:	99 1f       	adc	r25, r25
 222:	6a 95       	dec	r22
 224:	e2 f7       	brpl	.-8      	; 0x21e <DIO_WritePinValue+0xa2>
 226:	80 95       	com	r24
 228:	95 b3       	in	r25, 0x15	; 21
 22a:	89 23       	and	r24, r25
 22c:	85 bb       	out	0x15, r24	; 21
 22e:	08 95       	ret
 230:	41 30       	cpi	r20, 0x01	; 1
 232:	59 f4       	brne	.+22     	; 0x24a <DIO_WritePinValue+0xce>
 234:	81 e0       	ldi	r24, 0x01	; 1
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	02 c0       	rjmp	.+4      	; 0x23e <DIO_WritePinValue+0xc2>
 23a:	88 0f       	add	r24, r24
 23c:	99 1f       	adc	r25, r25
 23e:	6a 95       	dec	r22
 240:	e2 f7       	brpl	.-8      	; 0x23a <DIO_WritePinValue+0xbe>
 242:	92 b3       	in	r25, 0x12	; 18
 244:	89 2b       	or	r24, r25
 246:	82 bb       	out	0x12, r24	; 18
 248:	08 95       	ret
 24a:	41 11       	cpse	r20, r1
 24c:	0b c0       	rjmp	.+22     	; 0x264 <DIO_WritePinValue+0xe8>
 24e:	81 e0       	ldi	r24, 0x01	; 1
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	02 c0       	rjmp	.+4      	; 0x258 <DIO_WritePinValue+0xdc>
 254:	88 0f       	add	r24, r24
 256:	99 1f       	adc	r25, r25
 258:	6a 95       	dec	r22
 25a:	e2 f7       	brpl	.-8      	; 0x254 <DIO_WritePinValue+0xd8>
 25c:	80 95       	com	r24
 25e:	92 b3       	in	r25, 0x12	; 18
 260:	89 23       	and	r24, r25
 262:	82 bb       	out	0x12, r24	; 18
 264:	08 95       	ret

00000266 <main>:
*/
u8 volatile x=1;
u8* volatile value;
int main(void)
{    
	 TIM0_Config.tim_mode=TIMER0_OVF;  //  enable overflow mode 
 266:	e2 e6       	ldi	r30, 0x62	; 98
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	10 82       	st	Z, r1
	 TIM0_Config.TOVI_enable=TOVFIE0_enable ; // enable over flow interrupt enable 
 26c:	11 82       	std	Z+1, r1	; 0x01
	 TIM0_Config.OCIE_enable=OCIE0_disable;   // disable OCIE
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	68 2f       	mov	r22, r24
 272:	82 83       	std	Z+2, r24	; 0x02
	  TIM0_Config.pre_scal=PRESCAIING_CLK1024;  // divide clock by 1024
 274:	85 e0       	ldi	r24, 0x05	; 5
 276:	78 2f       	mov	r23, r24
 278:	83 83       	std	Z+3, r24	; 0x03
    TIM0_init(TIM0_Config);
 27a:	40 e0       	ldi	r20, 0x00	; 0
 27c:	50 e0       	ldi	r21, 0x00	; 0
 27e:	80 91 66 00 	lds	r24, 0x0066	; 0x800066 <__data_end+0x4>
 282:	0e 94 97 01 	call	0x32e	; 0x32e <TIM0_init>
	TIM0_Set_Overflow_number(19);
 286:	83 e1       	ldi	r24, 0x13	; 19
 288:	0e 94 33 02 	call	0x466	; 0x466 <TIM0_Set_Overflow_number>
	DIO_SetPinDirection(a,pin0,OUTPUT);
 28c:	41 e0       	ldi	r20, 0x01	; 1
 28e:	60 e0       	ldi	r22, 0x00	; 0
 290:	80 e0       	ldi	r24, 0x00	; 0
 292:	0e 94 49 00 	call	0x92	; 0x92 <DIO_SetPinDirection>
	sei();
 296:	78 94       	sei
 298:	ff cf       	rjmp	.-2      	; 0x298 <main+0x32>

0000029a <__vector_11>:
		
    }
	
}
ISR(TIMER0_OVF_vect)
{
 29a:	1f 92       	push	r1
 29c:	0f 92       	push	r0
 29e:	0f b6       	in	r0, 0x3f	; 63
 2a0:	0f 92       	push	r0
 2a2:	11 24       	eor	r1, r1
 2a4:	2f 93       	push	r18
 2a6:	3f 93       	push	r19
 2a8:	4f 93       	push	r20
 2aa:	5f 93       	push	r21
 2ac:	6f 93       	push	r22
 2ae:	7f 93       	push	r23
 2b0:	8f 93       	push	r24
 2b2:	9f 93       	push	r25
 2b4:	af 93       	push	r26
 2b6:	bf 93       	push	r27
 2b8:	ef 93       	push	r30
 2ba:	ff 93       	push	r31
	TIM0_Get_Overflow_number(value);
 2bc:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <value>
 2c0:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <value+0x1>
 2c4:	0e 94 36 02 	call	0x46c	; 0x46c <TIM0_Get_Overflow_number>
	if((*value)==x)
 2c8:	e0 91 67 00 	lds	r30, 0x0067	; 0x800067 <value>
 2cc:	f0 91 68 00 	lds	r31, 0x0068	; 0x800068 <value+0x1>
 2d0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 2d4:	90 81       	ld	r25, Z
 2d6:	98 13       	cpse	r25, r24
 2d8:	14 c0       	rjmp	.+40     	; 0x302 <__vector_11+0x68>
	{
		DIO_WritePinValue(a,pin0,HIGH);
 2da:	41 e0       	ldi	r20, 0x01	; 1
 2dc:	60 e0       	ldi	r22, 0x00	; 0
 2de:	80 e0       	ldi	r24, 0x00	; 0
 2e0:	0e 94 be 00 	call	0x17c	; 0x17c <DIO_WritePinValue>
		x=0;
 2e4:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 2e8:	80 e7       	ldi	r24, 0x70	; 112
 2ea:	91 e1       	ldi	r25, 0x11	; 17
 2ec:	a1 e0       	ldi	r26, 0x01	; 1
 2ee:	b0 e0       	ldi	r27, 0x00	; 0
 2f0:	01 97       	sbiw	r24, 0x01	; 1
 2f2:	a1 09       	sbc	r26, r1
 2f4:	b1 09       	sbc	r27, r1
		for(u32 y=0;y<70000;y++);
 2f6:	e1 f7       	brne	.-8      	; 0x2f0 <__vector_11+0x56>
		DIO_WritePinValue(a,pin0,LOW);
 2f8:	40 e0       	ldi	r20, 0x00	; 0
 2fa:	60 e0       	ldi	r22, 0x00	; 0
 2fc:	80 e0       	ldi	r24, 0x00	; 0
 2fe:	0e 94 be 00 	call	0x17c	; 0x17c <DIO_WritePinValue>
		
	}
	x++;
 302:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 306:	8f 5f       	subi	r24, 0xFF	; 255
 308:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
}
 30c:	ff 91       	pop	r31
 30e:	ef 91       	pop	r30
 310:	bf 91       	pop	r27
 312:	af 91       	pop	r26
 314:	9f 91       	pop	r25
 316:	8f 91       	pop	r24
 318:	7f 91       	pop	r23
 31a:	6f 91       	pop	r22
 31c:	5f 91       	pop	r21
 31e:	4f 91       	pop	r20
 320:	3f 91       	pop	r19
 322:	2f 91       	pop	r18
 324:	0f 90       	pop	r0
 326:	0f be       	out	0x3f, r0	; 63
 328:	0f 90       	pop	r0
 32a:	1f 90       	pop	r1
 32c:	18 95       	reti

0000032e <TIM0_init>:
{
	OCR0=value;
}
extern void TIM0_Set_Counter_value(u8 value)    // TCNT0
{
	TCNT0=value;
 32e:	cf 93       	push	r28
 330:	df 93       	push	r29
 332:	00 d0       	rcall	.+0      	; 0x334 <TIM0_init+0x6>
 334:	00 d0       	rcall	.+0      	; 0x336 <TIM0_init+0x8>
 336:	1f 92       	push	r1
 338:	cd b7       	in	r28, 0x3d	; 61
 33a:	de b7       	in	r29, 0x3e	; 62
 33c:	49 83       	std	Y+1, r20	; 0x01
 33e:	5a 83       	std	Y+2, r21	; 0x02
 340:	6b 83       	std	Y+3, r22	; 0x03
 342:	7c 83       	std	Y+4, r23	; 0x04
 344:	8d 83       	std	Y+5, r24	; 0x05
 346:	41 30       	cpi	r20, 0x01	; 1
 348:	89 f0       	breq	.+34     	; 0x36c <TIM0_init+0x3e>
 34a:	28 f0       	brcs	.+10     	; 0x356 <TIM0_init+0x28>
 34c:	42 30       	cpi	r20, 0x02	; 2
 34e:	c9 f0       	breq	.+50     	; 0x382 <TIM0_init+0x54>
 350:	43 30       	cpi	r20, 0x03	; 3
 352:	11 f1       	breq	.+68     	; 0x398 <TIM0_init+0x6a>
 354:	2b c0       	rjmp	.+86     	; 0x3ac <TIM0_init+0x7e>
 356:	83 b7       	in	r24, 0x33	; 51
 358:	94 b7       	in	r25, 0x34	; 52
 35a:	8f 7b       	andi	r24, 0xBF	; 191
 35c:	94 bf       	out	0x34, r25	; 52
 35e:	83 bf       	out	0x33, r24	; 51
 360:	83 b7       	in	r24, 0x33	; 51
 362:	94 b7       	in	r25, 0x34	; 52
 364:	87 7f       	andi	r24, 0xF7	; 247
 366:	94 bf       	out	0x34, r25	; 52
 368:	83 bf       	out	0x33, r24	; 51
 36a:	20 c0       	rjmp	.+64     	; 0x3ac <TIM0_init+0x7e>
 36c:	83 b7       	in	r24, 0x33	; 51
 36e:	94 b7       	in	r25, 0x34	; 52
 370:	8f 7b       	andi	r24, 0xBF	; 191
 372:	94 bf       	out	0x34, r25	; 52
 374:	83 bf       	out	0x33, r24	; 51
 376:	83 b7       	in	r24, 0x33	; 51
 378:	94 b7       	in	r25, 0x34	; 52
 37a:	88 60       	ori	r24, 0x08	; 8
 37c:	94 bf       	out	0x34, r25	; 52
 37e:	83 bf       	out	0x33, r24	; 51
 380:	15 c0       	rjmp	.+42     	; 0x3ac <TIM0_init+0x7e>
 382:	83 b7       	in	r24, 0x33	; 51
 384:	94 b7       	in	r25, 0x34	; 52
 386:	80 64       	ori	r24, 0x40	; 64
 388:	94 bf       	out	0x34, r25	; 52
 38a:	83 bf       	out	0x33, r24	; 51
 38c:	83 b7       	in	r24, 0x33	; 51
 38e:	94 b7       	in	r25, 0x34	; 52
 390:	87 7f       	andi	r24, 0xF7	; 247
 392:	94 bf       	out	0x34, r25	; 52
 394:	83 bf       	out	0x33, r24	; 51
 396:	0a c0       	rjmp	.+20     	; 0x3ac <TIM0_init+0x7e>
 398:	83 b7       	in	r24, 0x33	; 51
 39a:	94 b7       	in	r25, 0x34	; 52
 39c:	80 64       	ori	r24, 0x40	; 64
 39e:	94 bf       	out	0x34, r25	; 52
 3a0:	83 bf       	out	0x33, r24	; 51
 3a2:	83 b7       	in	r24, 0x33	; 51
 3a4:	94 b7       	in	r25, 0x34	; 52
 3a6:	88 60       	ori	r24, 0x08	; 8
 3a8:	94 bf       	out	0x34, r25	; 52
 3aa:	83 bf       	out	0x33, r24	; 51
 3ac:	83 b7       	in	r24, 0x33	; 51
 3ae:	94 b7       	in	r25, 0x34	; 52
 3b0:	88 7f       	andi	r24, 0xF8	; 248
 3b2:	99 27       	eor	r25, r25
 3b4:	94 bf       	out	0x34, r25	; 52
 3b6:	83 bf       	out	0x33, r24	; 51
 3b8:	83 b7       	in	r24, 0x33	; 51
 3ba:	94 b7       	in	r25, 0x34	; 52
 3bc:	2c 81       	ldd	r18, Y+4	; 0x04
 3be:	82 2b       	or	r24, r18
 3c0:	94 bf       	out	0x34, r25	; 52
 3c2:	83 bf       	out	0x33, r24	; 51
 3c4:	8a 81       	ldd	r24, Y+2	; 0x02
 3c6:	88 23       	and	r24, r24
 3c8:	19 f0       	breq	.+6      	; 0x3d0 <TIM0_init+0xa2>
 3ca:	81 30       	cpi	r24, 0x01	; 1
 3cc:	39 f0       	breq	.+14     	; 0x3dc <TIM0_init+0xae>
 3ce:	0b c0       	rjmp	.+22     	; 0x3e6 <TIM0_init+0xb8>
 3d0:	89 b7       	in	r24, 0x39	; 57
 3d2:	9a b7       	in	r25, 0x3a	; 58
 3d4:	81 60       	ori	r24, 0x01	; 1
 3d6:	9a bf       	out	0x3a, r25	; 58
 3d8:	89 bf       	out	0x39, r24	; 57
 3da:	05 c0       	rjmp	.+10     	; 0x3e6 <TIM0_init+0xb8>
 3dc:	89 b7       	in	r24, 0x39	; 57
 3de:	9a b7       	in	r25, 0x3a	; 58
 3e0:	8e 7f       	andi	r24, 0xFE	; 254
 3e2:	9a bf       	out	0x3a, r25	; 58
 3e4:	89 bf       	out	0x39, r24	; 57
 3e6:	8b 81       	ldd	r24, Y+3	; 0x03
 3e8:	88 23       	and	r24, r24
 3ea:	19 f0       	breq	.+6      	; 0x3f2 <TIM0_init+0xc4>
 3ec:	81 30       	cpi	r24, 0x01	; 1
 3ee:	39 f0       	breq	.+14     	; 0x3fe <TIM0_init+0xd0>
 3f0:	0b c0       	rjmp	.+22     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3f2:	89 b7       	in	r24, 0x39	; 57
 3f4:	9a b7       	in	r25, 0x3a	; 58
 3f6:	82 60       	ori	r24, 0x02	; 2
 3f8:	9a bf       	out	0x3a, r25	; 58
 3fa:	89 bf       	out	0x39, r24	; 57
 3fc:	05 c0       	rjmp	.+10     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3fe:	89 b7       	in	r24, 0x39	; 57
 400:	9a b7       	in	r25, 0x3a	; 58
 402:	8d 7f       	andi	r24, 0xFD	; 253
 404:	9a bf       	out	0x3a, r25	; 58
 406:	89 bf       	out	0x39, r24	; 57
 408:	8d 81       	ldd	r24, Y+5	; 0x05
 40a:	81 30       	cpi	r24, 0x01	; 1
 40c:	79 f0       	breq	.+30     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 40e:	18 f0       	brcs	.+6      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 410:	82 30       	cpi	r24, 0x02	; 2
 412:	b9 f0       	breq	.+46     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 414:	20 c0       	rjmp	.+64     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 416:	83 b7       	in	r24, 0x33	; 51
 418:	94 b7       	in	r25, 0x34	; 52
 41a:	8f 7d       	andi	r24, 0xDF	; 223
 41c:	94 bf       	out	0x34, r25	; 52
 41e:	83 bf       	out	0x33, r24	; 51
 420:	83 b7       	in	r24, 0x33	; 51
 422:	94 b7       	in	r25, 0x34	; 52
 424:	8f 7e       	andi	r24, 0xEF	; 239
 426:	94 bf       	out	0x34, r25	; 52
 428:	83 bf       	out	0x33, r24	; 51
 42a:	15 c0       	rjmp	.+42     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 42c:	83 b7       	in	r24, 0x33	; 51
 42e:	94 b7       	in	r25, 0x34	; 52
 430:	80 62       	ori	r24, 0x20	; 32
 432:	94 bf       	out	0x34, r25	; 52
 434:	83 bf       	out	0x33, r24	; 51
 436:	83 b7       	in	r24, 0x33	; 51
 438:	94 b7       	in	r25, 0x34	; 52
 43a:	8f 7e       	andi	r24, 0xEF	; 239
 43c:	94 bf       	out	0x34, r25	; 52
 43e:	83 bf       	out	0x33, r24	; 51
 440:	0a c0       	rjmp	.+20     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 442:	83 b7       	in	r24, 0x33	; 51
 444:	94 b7       	in	r25, 0x34	; 52
 446:	80 62       	ori	r24, 0x20	; 32
 448:	94 bf       	out	0x34, r25	; 52
 44a:	83 bf       	out	0x33, r24	; 51
 44c:	83 b7       	in	r24, 0x33	; 51
 44e:	94 b7       	in	r25, 0x34	; 52
 450:	80 61       	ori	r24, 0x10	; 16
 452:	94 bf       	out	0x34, r25	; 52
 454:	83 bf       	out	0x33, r24	; 51
 456:	0f 90       	pop	r0
 458:	0f 90       	pop	r0
 45a:	0f 90       	pop	r0
 45c:	0f 90       	pop	r0
 45e:	0f 90       	pop	r0
 460:	df 91       	pop	r29
 462:	cf 91       	pop	r28
 464:	08 95       	ret

00000466 <TIM0_Set_Overflow_number>:
}
extern void TIM0_Set_Overflow_number(u8 value)  // used in SW to take action after a number of TOV occur
{
	TIM0_TOV_Number=value;
 466:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <TIM0_TOV_Number>
 46a:	08 95       	ret

0000046c <TIM0_Get_Overflow_number>:
}
extern void TIM0_Get_Overflow_number(u8* value)
{
	*value=TIM0_TOV_Number;
 46c:	20 91 69 00 	lds	r18, 0x0069	; 0x800069 <TIM0_TOV_Number>
 470:	fc 01       	movw	r30, r24
 472:	20 83       	st	Z, r18
 474:	08 95       	ret

00000476 <_exit>:
 476:	f8 94       	cli

00000478 <__stop_program>:
 478:	ff cf       	rjmp	.-2      	; 0x478 <__stop_program>
